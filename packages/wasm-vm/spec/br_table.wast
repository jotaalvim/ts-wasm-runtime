(module
  (func $dummy)
  (func (export "type-i32")
    (block (drop (i32.ctz (br_table 0 0 (i32.const 0)))))
  )
  (func (export "type-i32-value") (result i32)
    (block (result i32) (i32.ctz (br_table 0 0 (i32.const 1) (i32.const 0))))
  )

  (func (export "empty") (param i32) (result i32)
    (block (br_table 0 (local.get 0)) (return (i32.const 21)))
    (i32.const 22)
  )
  (func (export "empty-value") (param i32) (result i32)
    (block (result i32)
      (br_table 0 (i32.const 33) (local.get 0)) (i32.const 31)
    )
  )

  (func (export "singleton") (param i32) (result i32)
    (block
      (block
        (br_table 1 0 (local.get 0))
        (return (i32.const 21))
      )
      (return (i32.const 20))
    )
    (i32.const 22)
  )

  (func (export "singleton-value") (param i32) (result i32)
    (block (result i32)
      (drop
        (block (result i32)
          (br_table 0 1 (i32.const 33) (local.get 0))
          (return (i32.const 31))
        )
      )
      (i32.const 32)
    )
  )

  (func (export "multiple") (param i32) (result i32)
    (block
      (block
        (block
          (block
            (block
              (br_table 3 2 1 0 4 (local.get 0))
              (return (i32.const 99))
            )
            (return (i32.const 100))
          )
          (return (i32.const 101))
        )
        (return (i32.const 102))
      )
      (return (i32.const 103))
    )
    (i32.const 104)
  )

  (func (export "multiple-value") (param i32) (result i32)
    (local i32)
    (local.set 1 (block (result i32)
      (local.set 1 (block (result i32)
        (local.set 1 (block (result i32)
          (local.set 1 (block (result i32)
            (local.set 1 (block (result i32)
              (br_table 3 2 1 0 4 (i32.const 200) (local.get 0))
              (return (i32.add (local.get 1) (i32.const 99)))
            ))
            (return (i32.add (local.get 1) (i32.const 10)))
          ))
          (return (i32.add (local.get 1) (i32.const 11)))
        ))
        (return (i32.add (local.get 1) (i32.const 12)))
      ))
      (return (i32.add (local.get 1) (i32.const 13)))
    ))
    (i32.add (local.get 1) (i32.const 14))
  )

  (func (export "as-block-first")
    (block (br_table 0 0 0 (i32.const 0)) (call $dummy))
  )
  (func (export "as-block-mid")
    (block (call $dummy) (br_table 0 0 0 (i32.const 0)) (call $dummy))
  )
  (func (export "as-block-last")
    (block (nop) (call $dummy) (br_table 0 0 0 (i32.const 0)))
  )
  (func (export "as-block-value") (result i32)
    (block (result i32)
      (nop) (call $dummy) (br_table 0 0 0 (i32.const 2) (i32.const 0))
    )
  )
)

(assert_return (invoke "type-i32"))
(assert_return (invoke "type-i32-value") (i32.const 1))


(assert_return (invoke "empty" (i32.const 0)) (i32.const 22))
(assert_return (invoke "empty" (i32.const 1)) (i32.const 22))
(assert_return (invoke "empty" (i32.const 11)) (i32.const 22))
(assert_return (invoke "empty" (i32.const -1)) (i32.const 22))
(assert_return (invoke "empty" (i32.const -100)) (i32.const 22))
(assert_return (invoke "empty" (i32.const 0xffffffff)) (i32.const 22))

(assert_return (invoke "empty-value" (i32.const 0)) (i32.const 33))
(assert_return (invoke "empty-value" (i32.const 1)) (i32.const 33))
(assert_return (invoke "empty-value" (i32.const 11)) (i32.const 33))
(assert_return (invoke "empty-value" (i32.const -1)) (i32.const 33))
(assert_return (invoke "empty-value" (i32.const -100)) (i32.const 33))
(assert_return (invoke "empty-value" (i32.const 0xffffffff)) (i32.const 33))

(assert_return (invoke "singleton" (i32.const 0)) (i32.const 22))
(assert_return (invoke "singleton" (i32.const 1)) (i32.const 20))
(assert_return (invoke "singleton" (i32.const 11)) (i32.const 20))
(assert_return (invoke "singleton" (i32.const -1)) (i32.const 20))
(assert_return (invoke "singleton" (i32.const -100)) (i32.const 20))
(assert_return (invoke "singleton" (i32.const 0xffffffff)) (i32.const 20))

(assert_return (invoke "singleton-value" (i32.const 0)) (i32.const 32))
(assert_return (invoke "singleton-value" (i32.const 1)) (i32.const 33))
(assert_return (invoke "singleton-value" (i32.const 11)) (i32.const 33))
(assert_return (invoke "singleton-value" (i32.const -1)) (i32.const 33))
(assert_return (invoke "singleton-value" (i32.const -100)) (i32.const 33))
(assert_return (invoke "singleton-value" (i32.const 0xffffffff)) (i32.const 33))

(assert_return (invoke "multiple" (i32.const 0)) (i32.const 103))
(assert_return (invoke "multiple" (i32.const 1)) (i32.const 102))
(assert_return (invoke "multiple" (i32.const 2)) (i32.const 101))
(assert_return (invoke "multiple" (i32.const 3)) (i32.const 100))
(assert_return (invoke "multiple" (i32.const 4)) (i32.const 104))
(assert_return (invoke "multiple" (i32.const 5)) (i32.const 104))
(assert_return (invoke "multiple" (i32.const 6)) (i32.const 104))
(assert_return (invoke "multiple" (i32.const 10)) (i32.const 104))
(assert_return (invoke "multiple" (i32.const -1)) (i32.const 104))
(assert_return (invoke "multiple" (i32.const 0xffffffff)) (i32.const 104))

(assert_return (invoke "multiple-value" (i32.const 0)) (i32.const 213))
(assert_return (invoke "multiple-value" (i32.const 1)) (i32.const 212))
(assert_return (invoke "multiple-value" (i32.const 2)) (i32.const 211))
(assert_return (invoke "multiple-value" (i32.const 3)) (i32.const 210))
(assert_return (invoke "multiple-value" (i32.const 4)) (i32.const 214))
(assert_return (invoke "multiple-value" (i32.const 5)) (i32.const 214))
(assert_return (invoke "multiple-value" (i32.const 6)) (i32.const 214))
(assert_return (invoke "multiple-value" (i32.const 10)) (i32.const 214))
(assert_return (invoke "multiple-value" (i32.const -1)) (i32.const 214))
(assert_return (invoke "multiple-value" (i32.const 0xffffffff)) (i32.const 214))

(assert_return (invoke "as-block-first"))
(assert_return (invoke "as-block-mid"))
(assert_return (invoke "as-block-last"))
(assert_return (invoke "as-block-value") (i32.const 2))
